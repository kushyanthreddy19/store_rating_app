{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kushy\\\\Downloads\\\\store-ratings\\\\client\\\\src\\\\pages\\\\ChangePassword.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangePassword = () => {\n  _s();\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const {\n    updatePassword\n  } = useAuth();\n  const validatePassword = password => {\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,16}$/;\n    return passwordRegex.test(password);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n\n    // Validate new password\n    if (!validatePassword(newPassword)) {\n      setError(\"Password must be 8-16 characters with at least one uppercase letter and one special character\");\n      return;\n    }\n\n    // Check if passwords match\n    if (newPassword !== confirmPassword) {\n      setError(\"New passwords do not match\");\n      return;\n    }\n    setLoading(true);\n    try {\n      await updatePassword(currentPassword, newPassword);\n      setSuccess(\"Password updated successfully\");\n      setCurrentPassword(\"\");\n      setNewPassword(\"\");\n      setConfirmPassword(\"\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to update password\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"currentPassword\",\n          children: \"Current Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"currentPassword\",\n          value: currentPassword,\n          onChange: e => setCurrentPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newPassword\",\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"newPassword\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Password must be 8-16 characters with at least one uppercase letter and one special character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: loading,\n        children: loading ? \"Updating...\" : \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ChangePassword, \"JjNBwarHPqeevU2nP1sx8rdM2+M=\", false, function () {\n  return [useAuth];\n});\n_c = ChangePassword;\nexport default ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useAuth","jsxDEV","_jsxDEV","ChangePassword","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","loading","setLoading","updatePassword","validatePassword","password","passwordRegex","test","handleSubmit","e","preventDefault","err","_err$response","_err$response$data","response","data","message","className","children","fileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kushy/Downloads/store-ratings/client/src/pages/ChangePassword.js"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport { useAuth } from \"../contexts/AuthContext\"\n\nconst ChangePassword = () => {\n  const [currentPassword, setCurrentPassword] = useState(\"\")\n  const [newPassword, setNewPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n  const [error, setError] = useState(\"\")\n  const [success, setSuccess] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const { updatePassword } = useAuth()\n\n  const validatePassword = (password) => {\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,16}$/\n    return passwordRegex.test(password)\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setError(\"\")\n    setSuccess(\"\")\n\n    // Validate new password\n    if (!validatePassword(newPassword)) {\n      setError(\"Password must be 8-16 characters with at least one uppercase letter and one special character\")\n      return\n    }\n\n    // Check if passwords match\n    if (newPassword !== confirmPassword) {\n      setError(\"New passwords do not match\")\n      return\n    }\n\n    setLoading(true)\n\n    try {\n      await updatePassword(currentPassword, newPassword)\n      setSuccess(\"Password updated successfully\")\n      setCurrentPassword(\"\")\n      setNewPassword(\"\")\n      setConfirmPassword(\"\")\n    } catch (err) {\n      setError(err.response?.data?.message || \"Failed to update password\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Change Password</h2>\n      {error && <div className=\"error-message\">{error}</div>}\n      {success && <div className=\"success-message\">{success}</div>}\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"currentPassword\">Current Password</label>\n          <input\n            type=\"password\"\n            id=\"currentPassword\"\n            value={currentPassword}\n            onChange={(e) => setCurrentPassword(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"newPassword\">New Password</label>\n          <input\n            type=\"password\"\n            id=\"newPassword\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            required\n          />\n          <small>Password must be 8-16 characters with at least one uppercase letter and one special character</small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"confirmPassword\">Confirm New Password</label>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\n          {loading ? \"Updating...\" : \"Update Password\"}\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChangePassword\n\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAN,EAAA;EAC3B,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM;IAAEiB;EAAe,CAAC,GAAGhB,OAAO,CAAC,CAAC;EAEpC,MAAMiB,gBAAgB,GAAIC,QAAQ,IAAK;IACrC,MAAMC,aAAa,GAAG,wDAAwD;IAC9E,OAAOA,aAAa,CAACC,IAAI,CAACF,QAAQ,CAAC;EACrC,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBZ,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;;IAEd;IACA,IAAI,CAACI,gBAAgB,CAACX,WAAW,CAAC,EAAE;MAClCK,QAAQ,CAAC,+FAA+F,CAAC;MACzG;IACF;;IAEA;IACA,IAAIL,WAAW,KAAKE,eAAe,EAAE;MACnCG,QAAQ,CAAC,4BAA4B,CAAC;MACtC;IACF;IAEAI,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMC,cAAc,CAACZ,eAAe,EAAEE,WAAW,CAAC;MAClDO,UAAU,CAAC,+BAA+B,CAAC;MAC3CR,kBAAkB,CAAC,EAAE,CAAC;MACtBE,cAAc,CAAC,EAAE,CAAC;MAClBE,kBAAkB,CAAC,EAAE,CAAC;IACxB,CAAC,CAAC,OAAOe,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZf,QAAQ,CAAC,EAAAc,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcG,IAAI,cAAAF,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAI,2BAA2B,CAAC;IACtE,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEb,OAAA;IAAK4B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB7B,OAAA;MAAA6B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAApC,YAAA;MAAAqC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBxB,KAAK,iBAAIR,OAAA;MAAK4B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAErB;IAAK;MAAAsB,QAAA,EAAApC,YAAA;MAAAqC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACrDtB,OAAO,iBAAIV,OAAA;MAAK4B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEnB;IAAO;MAAAoB,QAAA,EAAApC,YAAA;MAAAqC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC5DhC,OAAA;MAAMiC,QAAQ,EAAEd,YAAa;MAAAU,QAAA,gBAC3B7B,OAAA;QAAK4B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB7B,OAAA;UAAOkC,OAAO,EAAC,iBAAiB;UAAAL,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAApC,YAAA;UAAAqC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzDhC,OAAA;UACEmC,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,iBAAiB;UACpBC,KAAK,EAAEnC,eAAgB;UACvBoC,QAAQ,EAAGlB,CAAC,IAAKjB,kBAAkB,CAACiB,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;UACpDG,QAAQ;QAAA;UAAAV,QAAA,EAAApC,YAAA;UAAAqC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAF,QAAA,EAAApC,YAAA;QAAAqC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENhC,OAAA;QAAK4B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB7B,OAAA;UAAOkC,OAAO,EAAC,aAAa;UAAAL,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAApC,YAAA;UAAAqC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjDhC,OAAA;UACEmC,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,aAAa;UAChBC,KAAK,EAAEjC,WAAY;UACnBkC,QAAQ,EAAGlB,CAAC,IAAKf,cAAc,CAACe,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;UAChDG,QAAQ;QAAA;UAAAV,QAAA,EAAApC,YAAA;UAAAqC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFhC,OAAA;UAAA6B,QAAA,EAAO;QAA6F;UAAAC,QAAA,EAAApC,YAAA;UAAAqC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAF,QAAA,EAAApC,YAAA;QAAAqC,UAAA;QAAAC,YAAA;MAAA,OACzG,CAAC,eAENhC,OAAA;QAAK4B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB7B,OAAA;UAAOkC,OAAO,EAAC,iBAAiB;UAAAL,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAApC,YAAA;UAAAqC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7DhC,OAAA;UACEmC,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,iBAAiB;UACpBC,KAAK,EAAE/B,eAAgB;UACvBgC,QAAQ,EAAGlB,CAAC,IAAKb,kBAAkB,CAACa,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;UACpDG,QAAQ;QAAA;UAAAV,QAAA,EAAApC,YAAA;UAAAqC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAF,QAAA,EAAApC,YAAA;QAAAqC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENhC,OAAA;QAAQmC,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,iBAAiB;QAACa,QAAQ,EAAE7B,OAAQ;QAAAiB,QAAA,EACjEjB,OAAO,GAAG,aAAa,GAAG;MAAiB;QAAAkB,QAAA,EAAApC,YAAA;QAAAqC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAF,QAAA,EAAApC,YAAA;MAAAqC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAF,QAAA,EAAApC,YAAA;IAAAqC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAArC,EAAA,CA5FKM,cAAc;EAAA,QAOSH,OAAO;AAAA;AAAA4C,EAAA,GAP9BzC,cAAc;AA8FpB,eAAeA,cAAc;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}